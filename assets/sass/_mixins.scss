// Mixins.less

// UTILITY MIXINS
// --------------------------------------------------

@mixin x-rem($property, $value) {
    #{$property}: $value * ($baselinePx/$baselineRem);
    #{$property}: #{$value}rem;
}

// Clearfix
// --------
// For clearing floats like a boss h5bp.com/q
@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
  }
  &:after {
    clear: both;
  }
}

.clearfix {
  @include clearfix();
}

@mixin tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// IE7 inline-block
// ----------------
@mixin ie7-inline-block() {
  *display: inline; // IE7 inline-block hack
  *zoom: 1;
}

// Sizing shortcuts
// -------------------------
@mixin size($height: 5px, $width: 5px) {
  width: $width;
  height: $height;
}
@mixin square($size: 5px) {
  @include size($size, $size);
}

// Placeholder text
// -------------------------
@mixin placeholder($color) {
  :-moz-placeholder {
    color: $color;
  }
  ::-webkit-input-placeholder {
    color: $color;
  }
}

// CSS3 PROPERTIES
// --------------------------------------------------

// Border Radius
@mixin border-radius($radius: 5px) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

// Drop shadows
@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25)) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

// Opacity
@mixin opacity($opacity) {
  opacity: $opacity / 100;
  filter: alpha(opacity=$opacity);
}

// Layout Calculations
// -------------------------

// 
// @TODO: Add docs to set-column-width!
//
@mixin set-column-width($containerWidth, $elWidth:50%, $elColumns:1, $totalColumns:2, $gutterWidth: $gutterWidthPx) {
    width: calculate-column-width($containerWidth, $elWidth, $elColumns, $totalColumns, $gutterWidth);
}
// 
// @TODO: Add docs to calculate-column-width!
//
@function calculate-column-width($containerWidth, $elWidth:50%, $elColumns:1, $totalColumns:2, $gutterWidth:$gutterWidthPx) {
    // calcuate total margin being used
    $gutterPercent: $gutterWidth / $containerWidth * 100%;
    $totalGutterPercent: $gutterPercent * ($totalColumns - 1);
    // distribute the gutter width between each column
    $columnGutterPercent: $totalGutterPercent / $totalColumns;
    // subtract gutter width from column
    @if $elWidth == 0 {
        $elWidth: $elColumns / $totalColumns * 100%;
    }
    $preFinalWidth: $elWidth - $columnGutterPercent;
    // add gutter widths to elements accounting for more than 1 column
    $finalWidth: $preFinalWidth + (($elColumns - 1) * $columnGutterPercent); 
    
    @return $finalWidth;
}
// 
// @TODO: Add docs to set-gutter-width!
//
@mixin set-gutter-width($containerWidth, $property: margin-left, $gutterWidth:$gutterWidthPx) {
    #{$property}: ($gutterWidth / $containerWidth) * 100%;
}
